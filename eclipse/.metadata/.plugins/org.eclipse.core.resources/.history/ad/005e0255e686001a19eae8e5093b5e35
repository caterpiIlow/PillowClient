package caterpillow.Module.HUD;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

import org.lwjgl.input.Keyboard;

import caterpillow.Module.Category;
import caterpillow.Module.Module;
import caterpillow.event.EventTarget;
import caterpillow.event.events.Event2D;
import net.minecraft.client.Minecraft;
import net.minecraft.client.resources.I18n;
import net.minecraft.potion.Potion;
import net.minecraft.potion.PotionEffect;

public class Potions extends Module {

	public Potions() {
		super("Potions", Keyboard.KEY_NONE, Category.HUD);
	}
	

	@Override
	public void setup() {
		pos = ScreenPosition.fromAbsolute(60, 0);
		width = 100;
		height = 50;

	}


	private static String getPotionDisplay(PotionEffect p) {
		String potionName = Potion.potionTypes[p.getPotionID()].getName();
		potionName = I18n.format(potionName, new Object[0]);

		if (p.getAmplifier() == 0) {
			potionName = potionName + " I ";
		} else if (p.getAmplifier() == 1) {
			potionName = potionName + " II ";
		} else if (p.getAmplifier() == 2) {
			potionName = potionName + " III ";
		} else if (p.getAmplifier() == 3) {
			potionName = potionName + " IV ";
		} else if (p.getAmplifier() == 4) {
			potionName = potionName + " V ";
		}
		potionName = potionName + Potion.getDurationString(p);
		return potionName;
	}

	public static class PotionComparator implements Comparator<PotionEffect> {

		public int compare(PotionEffect potion1, PotionEffect potion2) {
			if (Minecraft.getMinecraft().fontRendererObj
					.getStringWidth(getPotionDisplay(potion1)) > Minecraft.getMinecraft().fontRendererObj
							.getStringWidth(getPotionDisplay(potion2)))
				return -1;
			else
				return 1;
		}

	}

	private int potionHexColor(Potion potion) {
		if (potion.isBadEffect()) {
			return 0xFFFF5555;
		} else {
			return 0xFF55FF55;

		}
	}

	@EventTarget
	public void onRender2D(Event2D event) {
		ArrayList<PotionEffect> potionNames = new ArrayList();
		int count = 0;

		for (PotionEffect p : mc.thePlayer.getActivePotionEffects()) {
			potionNames.add(p);
		}

		Collections.sort(potionNames, new PotionComparator());

		for (PotionEffect p : potionNames) {
			if (!(p.getDuration() > 0))
				continue;

			String potionName = getPotionDisplay(p);
			fr.drawStringWithShadow(potionName, pos.getAbsoluteX() + 2,
					(int) count * (fr.FONT_HEIGHT + 2) + pos.getAbsoluteY() + 2,
					Potion.potionTypes[p.getPotionID()].getLiquidColor());
			count++;
		}

	}

}
