package caterpillow.Module.Render;

import org.lwjgl.input.Keyboard;

import caterpillow.Client.Client;
import caterpillow.Module.Category;
import caterpillow.Module.Module;
import de.Hero.settings.Setting;
import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.block.model.ItemCameraTransforms;
import net.minecraft.client.renderer.entity.RendererLivingEntity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemBlock;
import net.minecraft.item.ItemStack;

public class OldAnimations extends Module {

	public OldAnimations() {
		super("OldAnimations", Keyboard.KEY_NONE, Category.RENDER);
	}

	@Override
	public void setup() {
//		ArrayList<String> options = new ArrayList<>();
//		options.add("Swing");
//		options.add("Send Click");
//		Client.instance.settingsManager.rSetting(new Setting("Animation", this, "None", options));
		Client.instance.settingsManager.rSetting(new Setting("Sharpness", this, true));
		Client.instance.settingsManager.rSetting(new Setting("Multiplier", this, 1, 1, 10, "SharpMultiplier", true));
		Client.instance.settingsManager.rSetting(new Setting("Criticals", this, true));
		Client.instance.settingsManager.rSetting(new Setting("Multiplier", this, 1, 1, 10, "CritMultiplier", true));
	}

	public void doRenderLayer(EntityLivingBase entitylivingbaseIn, RendererLivingEntity<?> livingEntityRenderer) {
		ItemStack itemstack = entitylivingbaseIn.getHeldItem();

		if (itemstack != null) {
			GlStateManager.pushMatrix();
			if (livingEntityRenderer.getMainModel().isChild) {
				float f = 0.5f;
				GlStateManager.translate(0.0f, 0.625f, 0.0f);
				GlStateManager.rotate(-20.0f, -1.0f, 0.0f, 0.0f);
				GlStateManager.scale(f, f, f);
			}
			Label_0327: if (entitylivingbaseIn instanceof EntityPlayer) {
				if (Settings.OLD_BLOCKING) {
					if (((EntityPlayer) entitylivingbaseIn).isBlocking()) {
						if (entitylivingbaseIn.isSneaking()) {
							((ModelBiped) livingEntityRenderer.getMainModel()).postRenderArm(0.0325f);
							GlStateManager.scale(1.05f, 1.05f, 1.05f);
							GlStateManager.translate(-0.58f, 0.32f, -0.07f);
							GlStateManager.rotate(-24405.0f, 137290.0f, -2009900.0f, -2654900.0f);
						} else {
							((ModelBiped) livingEntityRenderer.getMainModel()).postRenderArm(0.0325f);
							GlStateManager.scale(1.05f, 1.05f, 1.05f);
							GlStateManager.translate(-0.45f, 0.25f, -0.07f);
							GlStateManager.rotate(-24405.0f, 137290.0f, -2009900.0f, -2654900.0f);
						}
					} else {
						((ModelBiped) livingEntityRenderer.getMainModel()).postRenderArm(0.0625f);
					}
				} else {
					((ModelBiped) livingEntityRenderer.getMainModel()).postRenderArm(0.0625f);
				}

				if (!Settings.OLD_ITEM_HELD) {
					GlStateManager.translate(-0.0625f, 0.4375f, 0.0625f);
				} else {
					if (!((EntityPlayer) entitylivingbaseIn).isBlocking()) {
						if (Settings.OLD_ITEM_HELD) {
							GlStateManager.translate(-0.0855f, 0.4775f, 0.1585f);
							GlStateManager.rotate(-19.0f, 20.0f, 0.0f, -6.0f);
							break Label_0327;
						}
					}

					if (((EntityPlayer) entitylivingbaseIn).isBlocking()) {
						GlStateManager.translate(-0.0625f, 0.4375f, 0.0625f);
					}
				}
			} else {
				((ModelBiped) livingEntityRenderer.getMainModel()).postRenderArm(0.0625f);
				GlStateManager.translate(-0.0625f, 0.4375f, 0.0625f);
			}

			if (entitylivingbaseIn instanceof EntityPlayer && ((EntityPlayer) entitylivingbaseIn).fishEntity != null) {
				itemstack = new ItemStack(Items.fishing_rod, 0);
			}

			Item item = itemstack.getItem();
			Minecraft minecraft = Minecraft.getMinecraft();

			if (item instanceof ItemBlock && Block.getBlockFromItem(item).getRenderType() == 2) {
				GlStateManager.translate(0.0f, 0.1875f, -0.3125f);
				GlStateManager.rotate(20.0f, 1.0f, 0.0f, 0.0f);
				GlStateManager.rotate(45.0f, 0.0f, 1.0f, 0.0f);
				float f2 = 0.375f;
				GlStateManager.scale(-f2, -f2, f2);
			}

			if (entitylivingbaseIn.isSneaking()) {
				GlStateManager.translate(0.0f, 0.203125f, 0.0f);
			}

			minecraft.getItemRenderer().renderItem(entitylivingbaseIn, itemstack,
					ItemCameraTransforms.TransformType.THIRD_PERSON);
			GlStateManager.popMatrix();
		}
	}

//	public Timer timer = new Timer();
//
//	@EventTarget
//	public void onUpdate(EventUpdate e) {
//		if (mc.gameSettings.keyBindAttack.pressed) {
//			if (mc.thePlayer.isEating() && mc.gameSettings.keyBindUseItem.pressed
//					&& mc.thePlayer.getHeldItem().getItem() != null) {
//				if (mc.thePlayer.getHeldItem().getItem() instanceof ItemFood) {
//					if (Client.instance.settingsManager.getSettingByName("Animation").getValString()
//							.equalsIgnoreCase("Swing")) {
//						mc.thePlayer.swingItem();
//					} else if (Client.instance.settingsManager.getSettingByName("Animation").getValString()
//							.equalsIgnoreCase("Send Click")) {
//						if (mc.gameSettings.keyBindAttack.pressed == true) {
//							mc.clickMouse();
//							timer.reset();
//						} else {
//							timer.reset();
//						}
//					}
//				}
//			}
//			if (mc.thePlayer.isEating() && mc.gameSettings.keyBindUseItem.pressed
//					&& mc.thePlayer.getHeldItem().getItem() != null) {
//				if (mc.thePlayer.getHeldItem().getItem() instanceof ItemPotion) {
//					if (Client.instance.settingsManager.getSettingByName("Animation").getValString()
//							.equalsIgnoreCase("Swing")) {
//						mc.thePlayer.swingItem();
//					} else if (Client.instance.settingsManager.getSettingByName("Animation").getValString()
//							.equalsIgnoreCase("Send Click")) {
//						if (mc.gameSettings.keyBindAttack.pressed == true) {
//							mc.clickMouse();
//							timer.reset();
//						} else {
//							timer.reset();
//						}
//					}
//				}
//			}
//		}
//	}

//	@EventTarget
//	public void onUpdate(EventPacket e) {
//		if (mc.gameSettings.keyBindAttack.pressed) {
//			if (mc.thePlayer.isEating() && mc.gameSettings.keyBindUseItem.pressed
//					&& mc.thePlayer.getHeldItem().getItem() instanceof ItemFood
//					&& mc.thePlayer.getHeldItem().getItem() != null && this.getBool("Food")
//					&& this.getBool("Serverside") == false) {
//				if (e.getPacket() instanceof C0APacketAnimation) {
//					e.setCancelled(true);
//				}
//			}
//			if (mc.thePlayer.isEating() && mc.gameSettings.keyBindUseItem.pressed
//					&& mc.thePlayer.getHeldItem().getItem() instanceof ItemPotion
//					&& mc.thePlayer.getHeldItem().getItem() != null && this.getBool("Potions")
//					&& this.getBool("Serverside") == false) {
//				if (e.getPacket() instanceof C0APacketAnimation) {
//					e.setCancelled(true);
//				}
//			}
//		}
//	}

}
